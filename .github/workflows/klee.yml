name: Run Klee
on:
  push:

jobs:
  run-klee:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2 
        with:
          ref: 576e7552a29e30b40205f81f2ff4d461f018313f

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
        
      - name: Install dependencies for project (Linux)
        if: runner.os == 'Linux'
        run: | 
          sudo apt-get update
          sudo apt-get install -y ffmpeg libsdl2-2.0-0 adb libusb-1.0-0 gcc git pkg-config meson ninja-build libsdl2-dev \
                 libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \
                 libswresample-dev libusb-1.0-0-dev android-sdk
          export ANDROID_SDK_ROOT=~/Android/Sdk

      - name: Install dependencies for project (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install sdl2 ffms2 libusb meson ffmpeg ninja pkg-config
          brew install --cask android-platform-tools
          brew install --cask android-sdk
          export ANDROID_SDK_ROOT=~/Library/Android/sdk
          
      - name: Build repository 
        run: |
          meson setup x --buildtype=release --strip -Db_lto=true
          ninja -Cx
      
      - name: Install Klee and STP dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake curl file g++-multilib gcc-multilib git libcap-dev libunwind-dev libgoogle-perftools-dev libncurses5-dev libsqlite3-dev libtcmalloc-minimal4 python3-pip unzip graphviz doxygen bison flex libboost-all-dev perl zlib1g-dev minisat
          sudo pip3 install lit wllvm --break-system-packages
          sudo apt-get install -y clang-13 llvm-13 llvm-13-dev llvm-13-tools 

      - name: Setup MacPorts
        if: runner.os == 'macOS'
        uses: melusina-org/setup-macports@v1.1.4
          
      - name: Install Klee Dependencies + STP (macOS)
        if: runner.os == 'macOS'
        run: | 
           brew install curl git cmake unzip gperftools sqlite3 graphviz doxygen bash llvm python-tabulate stp
           sudo pip3 install lit wllvm
           sudo port -v selfupdate
           sudo port install clang-13
           brew install llvm@13
           ulimit -s 65532
           echo 'export PATH="/usr/local/opt/llvm@13/bin:$PATH"' >> $GITHUB_ENV
           echo 'export LDFLAGS="-L/usr/local/opt/llvm@13/lib"' >> $GITHUB_ENV
           echo 'export CPPFLAGS="-I/usr/local/opt/llvm@13/include"' >> $GITHUB_ENV
           
      - name: Install STP (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install cmake bison flex libboost-all-dev perl zlib1g-dev minisat
          git clone https://github.com/stp/stp.git /tmp/stp
          cd /tmp/stp && git checkout tags/2.3.3
          mkdir build && cd build
          cmake .. && make 
          sudo make install
          ulimit -s unlimited
      
      - name: Downloading Google Test Sources (a dependency to Klee)
        run: |
          mkdir -p /tmp/gtest && cd /tmp/gtest
          curl -OL https://github.com/google/googletest/archive/release-1.11.0.zip && unzip release-1.11.0.zip
      
      - name: Build uClibc and the POSIX environment model (Linux only)
        if: runner.os == 'Linux'
        run: |
          git clone https://github.com/klee/klee-uclibc.git /tmp/klee-uclibc
          cd /tmp/klee-uclibc && ./configure --make-llvm-lib --with-cc clang-13 --with-llvm-config llvm-config-13
          make -j2 
          cd ..
            
      - name: Configuring and Building Klee (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone https://github.com/klee/klee.git /tmp/klee
          cd /tmp/klee
          mkdir build && cd build 
          cmake -DENABLE_SOLVER_STP=ON -DENABLE_POSIX_RUNTIME=ON -DKLEE_UCLIBC_PATH=/tmp/klee-uclibc -DENABLE_UNIT_TESTS=ON -DGTEST_SRC_DIR=/tmp/gtest/googletest-release-1.11.0 ..
          make

      - name: Configuring and Building Klee (macOS)
        if: runner.os == 'macOS'
        run: |
          git clone https://github.com/klee/klee.git /tmp/klee
          cd /tmp/klee
          mkdir build && cd build 
          echo 'export LLVM_DIR="/opt/local/var/llvm-13/cmake"' >> $GITHUB_ENV
          cmake -DLLVM_DIR=/usr/local/opt/llvm@13/ -DENABLE_SOLVER_STP=ON -DENABLE_POSIX_RUNTIME=ON -DENABLE_UNIT_TESTS=ON -DGTEST_SRC_DIR=/tmp/gtest/googletest-release-1.11.0 ..
          make
      
      - name: Run Klee Analyzer
        run: |
          set +e

          include_dirs=$(find . -name '*.h' -exec dirname {} + | sort -u | sed 's/^/-I /')

          find . -name "*.c" -exec grep -q "int main" {} \; -print0 | while IFS= read -r -d '' file; do
              bc_file="${file%.c}.bc"
              if clang -I "$include_dirs" -emit-llvm -c -g -O0 -Xclang -disable-O0-optnone "$file" -o "$bc_file" 2>/dev/null; then
                  if ! /usr/lib/llvm-14/bin/llvm-nm "$PWD/$bc_file" | grep -q " T main"; then
                      rm "$bc_file"
                  else
                      /tmp/klee/build/bin/klee "$bc_file"
                  fi
              else
                  continue
              fi
          done
